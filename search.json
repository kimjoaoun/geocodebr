[{"path":"https://ipeagit.github.io/geocodebr/articles/geocode.html","id":"geolocalização-de-endereços-para-coordenadas-espaciais","dir":"Articles","previous_headings":"","what":"Geolocalização: de endereços para coordenadas espaciais","title":"Geocode","text":"principal função pacote {geocodebr} é geocode(), que recebe uma tabela (data.frame) de endereços como entrada e retorna mesma tabela geolocalizada como saída. Para demonstrar essa função, utilizamos exemplo abaixo pequeno conjunto de dados que contém endereços com problemas comuns, como informações ausentes e campos digitados incorretamente. geolocalização desses dados com {geocodebr} pode ser feita em apenas dois passos: O primeiro passo é usar função definir_campos() para indicar os nomes das colunas seu data.frame que correspondem cada campo dos endereços. exemplo abaixo, nós indicamos que coluna que contém informação de logradouro se chama \"nm_logradouro\", que coluna de número se chama \"Numero\", etc. obs. Note que colunas indicando o \"estado\" e \"município\" são obrigatórias. O segundo passo é usar função geocode() para encontrar coordenadas geográficas dos dados de input. Nota: função geocode() requer que os dados CNEFE estejam armazenados localmente. primeita vez que função é executada, ela baixa os dados CNEFE e salva em um cache local na sua máquina. total, esses dados somam cerca de 3 GB, o que pode fazer com que primeira execução da função demore. Esses dados, entanto, são salvos de forma persistente, logo eles são baixados uma única vez. Mais informações sobre o cache de dados aqui. Por padrão, tabela de output é igual à tabela de input usuário acrescida de colunas com latitude e longitude encontradas, bem como de colunas indicando o nível de precisão dos resultados e o endereço encontrado. Quando resultado_completo = TRUE, o output é acrescido de algumas colunas extras. Cabe também destacar aqui outros dois argumentos da função geocode(): resolver_empates: serve para indicar se o usuário quer que função resolva automaticamente casos de empate, .e. casos que o endereço de input usuário pode se referir diferentes localidades na cidade (e.g. logradouros diferentes com mesmo nome mas em bairros distintos). Quando TRUE, função resolve os empates selecioando os endereços com maior número de visitas CNEFE. Quando FALSE, função retorna todos os resultados indicando os casos empatados na coluna ‘empate’ para que o usuário possa inspecionar cada caso coluna ‘endereco_encontrado’. resultado_sf: quando TRUE, o output é retornado como um objeto espacial de classe sf simple feature. coordendas espaciais resultado usam o sistema de referência SIRGAS2000 (EPSG 4674.), padrão adotado pelo IBGE em todo o Brasil. Cada par de coordenadas encontrado pode ser classificado conforme o seu grau de precisão (coluna precisao) e os campos endereço utilizados para encontrá-lo (tipo_resultado). seção seguir apresenta mais informações sobre essas colunas.","code":"library(geocodebr)  # leitura de amostra de dados ends <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # definição dos campos de endereço campos <- definir_campos(   estado = \"nm_uf\",   municipio = \"nm_municipio\",   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\" ) # geolicalização ends_geo <- geocode(   enderecos = ends,    campos_endereco = campos,    resultado_completo = FALSE,   resolver_empates = TRUE,   resultado_sf = FALSE,   verboso = FALSE   ) #> Warning in max(contagem_cnefe, na.rm = TRUE): no non-missing arguments to max; #> returning -Inf  head(ends_geo) #>       id            nm_logradouro Numero       Cep               Bairro #>    <int>                   <char>  <int>    <char>               <char> #> 1:     1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2:     2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3:     3          Rua Dona Judite      0 23915-700          Caputera II #> 4:     4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5:     5                Avenida E    300 23860-000         Praia Grande #> 6:     6      Rua Princesa Isabel    263           Estacao Experimental #>       nm_municipio code_muni  nm_uf        lat       lon tipo_resultado #>             <char>     <int> <char>      <num>     <num>         <char> #> 1:     Nova Iguacu   3303500     RJ -22.695496 -43.47118           dn01 #> 2: Duque de Caxias   3301702     RJ -22.779173 -43.31134           dn01 #> 3:  Angra dos Reis   3300100     RJ -22.978837 -44.20848           dl01 #> 4:  Rio de Janeiro   3304557     RJ -22.868992 -43.51150           dl01 #> 5:     Mangaratiba   3302601     RJ -22.929864 -43.97214           dn01 #> 6:      Rio Branco   1200401     AC  -9.963436 -67.83559           dn03 #>      precisao #>        <char> #> 1:     numero #> 2:     numero #> 3: logradouro #> 4: logradouro #> 5:     numero #> 6:     numero #>                                                            endereco_encontrado #>                                                                         <char> #> 1:      RUA MARIA LUCIA PACIFICO, 17 - SANTA RITA, NOVA IGUACU - RJ, 26042-730 #> 2:       RUA LEOPOLDINA TOME, 46 - CENTENARIO, DUQUE DE CAXIAS - RJ, 25030-050 #> 3:               RUA DONA JUDITE - CAPUTERA II, ANGRA DOS REIS - RJ, 23915-700 #> 4:           RUA ALEXANDRE AMARAL - SANTISSIMO, RIO DE JANEIRO - RJ, 23098-120 #> 5:                  AVENIDA E, 300 - PRAIA GRANDE, MANGARATIBA - RJ, 23860-000 #> 6: RUA PRINCESA ISABEL, 263 - ESTACAO EXPERIMENTAL, RIO BRANCO - AC, 69921-026 #>    empate #>    <lgcl> #> 1:  FALSE #> 2:  FALSE #> 3:  FALSE #> 4:  FALSE #> 5:  FALSE #> 6:  FALSE"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocode.html","id":"grau-de-precisão-dos-resultados","dir":"Articles","previous_headings":"Geolocalização: de endereços para coordenadas espaciais","what":"Grau de precisão dos resultados","title":"Geocode","text":"coordenadas incluídas resultado da geocode() são calculadas partir da média das coordenadas dos endereços CNEFE que correspondem cada um dos endereços de input. correspondência entre os endereços de entrada e os CNEFE pode ser feita com base em diferentes combinações de campos, impactando, assim, na precisão resultado retornado. caso mais rigoroso, função encontra uma correspondência determinística para cada um dos campos endereço (estado, município, logradouro, número, CEP e localidade). Pense, por exemplo, em um prédio com vários apartamentos, cuja única variação endereço se dá nível de apartamento: o resultado, nesse caso, é média das coordenadas dos apartamentos, que podem diferir ligeiramente. Em um caso menos rigoroso, qual são encontradas correspondências apenas para os campos de estado, município, logradouro e localidade, função calcula coordenadas médias de todos os endereços CNEFE que se encontram na mesma rua e na mesma localidade. O resultado, portanto, é agregado nível de rua, tendendo para extremidade logradouro com maior concentração de endereços. coluna precisao se refere ao nível de agregação das coordenadas CNEFE utilizadas pela geocode(). função sempre retorna o resultado de maior precisão possível - ou seja, ela só vai procurar endereços com precisão \"numero_aproximado\" (ver seguir) caso não tenha encontrado correspondência de precisão \"numero\". coordenadas calculadas podem ser classificadas em seis diferentes categorias de precisão: \"numero\" - calculadas partir de endereços que compartilham o mesmo logradouro e número; \"numero_aproximado\" - calculadas partir de endereços que compartilham o mesmo logradouro, mas número de input não encontra correspondência exata CNEFE e sua localização é calculada partir de uma interpolação espacial; \"logradouro\" - calculadas partir de endereços que compartilham o mesmo logradouro (número de input está ausente ou é S/N); \"cep\" - calculadas partir de endereços que compartilham o mesmo CEP; \"localidade\" - calculadas partir de endereços que compartilham mesma localidade; \"municipio\" - calculadas partir de endereços que compartilham o mesmo município. coluna tipo_resultado fornece informações mais detalhadas sobre os campos de endereço utilizados cálculo das coordenadas de cada endereço de entrada. Cada categoria é nomeada partir de um código de quatro caracteres: o primeiro, sempre d ou p, determina se correspondência foi feita de forma determinística (d) ou probabilística (p); o segundo faz menção à categoria de precisao na qual o resultado foi classificado (n para \"numero\", para \"numero_aproximado\", l para \"logradouro\", c para \"cep\", b para \"localidade\" e m para \"municipio\"); o terceiro e o quarto designam classificação de cada categoria dentro de seu grupo - via de regra, quanto menor o número formado por esses caracteres, mais precisa são coordenadas calculadas. categorias de tipo_resultado são listadas abaixo, junto às categorias de precisao qual elas estão associadas: dn01 - logradouro, numero, cep e localidade dn02 - logradouro, numero e cep dn03 - logradouro, numero e localidade dn04 - logradouro e numero pn01 - logradouro, numero, cep e localidade pn02 - logradouro, numero e cep pn03 - logradouro, numero e localidade pn04 - logradouro e numero da01 - logradouro, numero, cep e localidade da02 - logradouro, numero e cep da03 - logradouro, numero e localidade da04 - logradouro e numero pa01 - logradouro, numero, cep e localidade pa02 - logradouro, numero e cep pa03 - logradouro, numero e localidade pa04 - logradouro e numero dl01 - logradouro, cep e localidade dl02 - logradouro e cep dl03 - logradouro e localidade dl04 - logradouro pl01 - logradouro, cep e localidade pl02 - logradouro e cep pl03 - logradouro e localidade pl04 - logradouro dc01 - municipio, cep, localidade dc02 - municipio, cep db01 - municipio, localidade dm01 - municipio Endereços não encontrados são retornados com latitude, longitude, precisão e tipo de resultado NA.","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocode_reverso.html","id":"geolocalização-reversa-de-coordenadas-espaciais-para-endereços","dir":"Articles","previous_headings":"","what":"Geolocalização reversa: de coordenadas espaciais para endereços","title":"Geocode reverso","text":"função geocode_reverso() permite fazer geolocalização reversa, isto é, partir de um conjunto de coordenadas geográficas, encontrar os endereços correspondentes ou próximos. Essa funcionalidade pode ser útil, por exemplo, para identificar endereços próximos pontos de interesse, como escolas, hospitais, ou locais de acidentes. função recebe como input um objeto espacial sf com geometria tipo POINT. O resultado é um data frame com o endereço encontrado mais próximo de cada ponto de input, onde coluna \"distancia_metros\" indica distância entre coordenadas originais e os endereços encontrados. Por padrão, função busca pelo endereço mais próximo num raio aproximado de 1000 metros. entanto, o usuário pode ajustar esse valor usando o parâmetro dist_max para definir distância máxima (em metros) de busca. Se um ponto de input não tiver nenhum endereço próximo dentro raio de busca, o ponto não é incluído output. Nota: função geocode_reverso() requer que os dados CNEFE estejam armazenados localmente. primeita vez que função é executada, ela baixa os dados CNEFE e salva em um cache local na sua máquina. total, esses dados somam cerca de 3 GB, o que pode fazer com que primeira execução da função demore. Esses dados, entanto, são salvos de forma persistente, logo eles são baixados uma única vez. Mais informações sobre o cache de dados aqui.","code":"library(geocodebr) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  # amostra de pontos espaciais pontos <- readRDS(   system.file(\"extdata/pontos.rds\", package = \"geocodebr\") )  pontos <- pontos[1:20,]  # geocode reverso df_enderecos <- geocodebr::geocode_reverso(   pontos = pontos,   dist_max = 1000,   verboso = FALSE,   n_cores = 1 )  head(df_enderecos) #> Simple feature collection with 3 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -51.49634 ymin: -19.29416 xmax: -39.92601 ymax: 0.3649148 #> Geodetic CRS:  SIRGAS 2000 #>   id                                               endereco_completo estado #> 1  1         CORREGO BOA VISTA, 32 - LAJINHA, PANCAS - ES, 29750-000     ES #> 2 11           RODOVIA ES 381, 6 - KM 13, SAO MATEUS - ES, 29944-025     ES #> 3 17 RAMAL MATAO DO PIACACA 1, 14 - PIACACA, SANTANA - AP, 68925-001     AP #>    municipio               logradouro numero       cep localidade  lat_cnefe #> 1     PANCAS        CORREGO BOA VISTA     32 29750-000    LAJINHA -19.291122 #> 2 SAO MATEUS           RODOVIA ES 381      6 29944-025      KM 13 -18.689982 #> 3    SANTANA RAMAL MATAO DO PIACACA 1     14 68925-001    PIACACA   0.361638 #>   lon_cnefe distancia_metros                    geometry #> 1 -40.73766         560.6493  POINT (-40.7334 -19.29416) #> 2 -39.92413         225.5553 POINT (-39.92601 -18.69095) #> 3 -51.49637         364.7801 POINT (-51.49634 0.3649148)"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"instalação","dir":"Articles","previous_headings":"","what":"Instalação","title":"Introdução ao geocodebr","text":"versão estável pacote pode ser baixada CRAN com o comando seguir: Caso prefira, versão em desenvolvimento:","code":"install.packages(\"geocodebr\") # install.packages(\"remotes\") remotes::install_github(\"ipeaGIT/geocodebr\")"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"utilização","dir":"Articles","previous_headings":"","what":"Utilização","title":"Introdução ao geocodebr","text":"O {geocodebr} possui três funções principais para geolocalização de dados: geocode() geocode_reverso() busca_por_cep()","code":""},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"geolocalização-de-endereços-para-coordenadas-espaciais","dir":"Articles","previous_headings":"Utilização","what":"1. Geolocalização: de endereços para coordenadas espaciais","title":"Introdução ao geocodebr","text":"Uma vez que você possui uma tabela de dados (data.frame) com endereços Brasil, geolocalização desses dados pode ser feita em apenas dois passos: O primeiro passo é usar função definir_campos() para indicar os nomes das colunas seu data.frame que correspondem cada campo dos endereços. O segundo passo é usar função geocode() para encontrar coordenadas geográficas dos endereços de input. Nota: função geocode() requer que os dados CNEFE estejam armazenados localmente. primeita vez que função é executada, ela baixa os dados CNEFE e salva em um cache local na sua máquina. total, esses dados somam cerca de 3 GB, o que pode fazer com que primeira execução da função demore. Esses dados, entanto, são salvos de forma persistente, logo eles são baixados uma única vez. Ver abaixo mais informações sobre o cache de dados. Os resultados {geocodebr} são classificados em seis categorias gerais de precisao, dependendo nível de exatidão com que cada endereço de input foi encontrado nos dados CNEFE. Para mais informações, consulte documentação da função ou vignette “geocode”.","code":"library(geocodebr) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  # carregando uma amostra de dados input_df <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # Primeiro passo: inidicar o nome das colunas com cada campo dos enderecos campos <- geocodebr::definir_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  # Segundo passo: geolocalizar df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = campos,   resultado_completo = FALSE,   resolver_empates = FALSE,   resultado_sf = FALSE,   verboso = FALSE,   cache = TRUE,   n_cores = 1 ) #> Warning: Foram encontrados 1 casos de empate. Estes casos foram marcados com valor #> `TRUE` na coluna 'empate', e podem ser inspecionados na coluna #> 'endereco_encontrado'. Alternativamente, use `resolver_empates = TRUE` para que #> o pacote lide com os empates automaticamente. Ver documentação da função."},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"geolocalização-reversa-de-coordenadas-espaciais-para-endereços","dir":"Articles","previous_headings":"Utilização","what":"2. Geolocalização reversa: de coordenadas espaciais para endereços","title":"Introdução ao geocodebr","text":"função geocode_reverso(), por sua vez, permite geolocalização reversa, ou seja, busca de endereços próximos um conjunto de coordenadas geográficas. Mais detalhes na vignette “geocode”.","code":"# amostra de pontos espaciais pontos <- readRDS(   system.file(\"extdata/pontos.rds\", package = \"geocodebr\") )  # seleciona somente os primeiros 20 pontos pontos <- pontos[1:20,]  # geocode reverso df_enderecos <- geocodebr::geocode_reverso(   pontos = pontos,   dist_max = 1000,   verboso = FALSE,   n_cores = 1 )"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"busca-por-ceps","dir":"Articles","previous_headings":"Utilização","what":"3. Busca por CEPs","title":"Introdução ao geocodebr","text":"Por fim, função busca_por_cep() permite fazer consultas de CEPs para encontrar endereços associados cada CEP. função recebe um vetor de CEPs e retorna um data.frame com os endereços e coordenadas geográficas de cada CEP.","code":"# amostra de CEPs ceps <- c(\"70390-025\", \"20071-001\")  df_ceps <- geocodebr::busca_por_cep(   cep = ceps,   resultado_sf = FALSE,   verboso = FALSE )"},{"path":"https://ipeagit.github.io/geocodebr/articles/geocodebr.html","id":"cache-de-dados","dir":"Articles","previous_headings":"","what":"Cache de dados","title":"Introdução ao geocodebr","text":"Como comentado anteriormente, os dados CNEFE são baixados na primeira vez que geocode() é executada. Esses dados ficam salvos cache pacote e não precisam ser baixados novamente. O pacote inclui algumas funções que ajudam gerenciar o cache: listar_pasta_cache() - retorna o endereço cache na sua máquina, onde os dados CNEFE estão salvos; definir_pasta_cache() - define uma pasta personalizada para ser usada como cache. Essa configuração é persistente entre diferentes sessões R; listar_dados_cache() - lista todos os arquivos armazenados cache; deletar_pasta_cache() - exclui pasta de cache, bem como todos os arquivos que estavam armazenados dentro dela. Após rodar o código desta vignette, é provável que o seu cache esteja configurado como seguir:","code":"geocodebr::listar_pasta_cache() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0\"  geocodebr::listar_dados_cache() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_cep_localidade.parquet\"                   #> [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_cep.parquet\"                              #> [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_localidade.parquet\"                       #> [4] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_cep_localidade.parquet\"        #> [5] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_localidade.parquet\"            #> [6] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_numero_cep_localidade.parquet\" #> [7] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_numero_localidade.parquet\"     #> [8] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio.parquet\""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael H. M. Pereira. Author, maintainer. Daniel Herszenhut. Author. Arthur Bazolli. Contributor. Ipea - Instituto de Pesquisa Econômica Aplicada. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/geocodebr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rafael H. M. Pereira, Daniel Herszenhut (2025). geocodebr: Geolocalização de Endereços Brasileiros.","code":"@Manual{,   author = {{Rafael H. M. Pereira} and {Daniel Herszenhut}},   title = {geocodebr: Geolocalização de Endereços Brasileiros},   year = {2025},   version = {v0.1.0}, }"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"geocodebr-geolocalização-de-endereços-brasileiros-","dir":"","previous_headings":"","what":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"O {geocodebr} é um pacote computacional para geolicalização de endereços Brasileiros. O pacote oferece uma maneira simples e eficiente de geolocalizar dados sem limite de número de consultas. O pacote é baseado em conjuntos de dados espaciais abertos de endereços brasileiros, utilizando como fonte principal o Cadastro Nacional de Endereços para Fins Estatísticos (CNEFE). O CNEFE é publicado pelo Instituto Brasileiro de Geografia e Estatística (IBGE). Atualmente, o pacote está disponível apenas em R.","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"última versão estável pode ser baixada CRAN com o comando seguir: Caso prefira, versão em desenvolvimento:","code":"# from CRAN install.packages(\"geocodebr\") # install.packages(\"remotes\") remotes::install_github(\"ipeaGIT/geocodebr\")"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"utilização","dir":"","previous_headings":"","what":"Utilização","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"O {geocodebr} possui três funções principais para geolocalização de dados: geocode() geocode_reverso() busca_por_cep()","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"id_1-geolocalização-de-endereços-para-coordenadas-espaciais","dir":"","previous_headings":"Utilização","what":"1. Geolocalização: de endereços para coordenadas espaciais","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"Uma que você possui uma tabela de dados (data.frame) com endereços Brasil, geolocalização desses dados pode ser feita em apenas dois passos: O primeiro passo é usar função definir_campos() para indicar os nomes das colunas seu data.frame que correspondem cada campo dos endereços. O segundo passo é usar função geocode() para encontrar coordenadas geográficas dos endereços de input. Os resultados {geocodebr} são classificados em seis categorias gerais de precisao, dependendo nível de exatidão com que cada endereço de input foi encontrado nos dados CNEFE. Para mais informações, consulte documentação da função ou vignette “geocode”.","code":"library(geocodebr) library(sf) #> Linking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE  # carregando uma amostra de dados input_df <- read.csv(system.file(\"extdata/small_sample.csv\", package = \"geocodebr\"))  # Primeiro passo: inidicar o nome das colunas com cada campo dos enderecos campos <- geocodebr::definir_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\"   )  # Segundo passo: geolocalizar df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = campos,   resultado_completo = FALSE,   resolver_empates = FALSE,   resultado_sf = FALSE,   verboso = FALSE,   cache = TRUE,   n_cores = 1   ) #> Warning: Foram encontrados 1 casos de empate. Estes casos foram marcados com valor #> `TRUE` na coluna 'empate', e podem ser inspecionados na coluna #> 'endereco_encontrado'. Alternativamente, use `resolver_empates = TRUE` para que #> o pacote lide com os empates automaticamente. Ver documentação da função."},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"id_2-geolocalização-reversa-de-coordenadas-espaciais-para-endereços","dir":"","previous_headings":"Utilização","what":"2. Geolocalização reversa: de coordenadas espaciais para endereços","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"função geocode_reverso(), por sua vez, permite geolocalização reversa, ou seja, busca de endereços próximos um conjunto de coordenadas geográficas. função pode ser útil, por exemplo, para identificar endereços próximos pontos de interesse, como escolas, hospitais, ou locais de acidentes. Mais detalhes na vignette “geocode”.","code":"# amostra de pontos espaciais pontos <- readRDS(    system.file(\"extdata/pontos.rds\", package = \"geocodebr\")    )  pontos <- pontos[1:20,]  # geocode reverso df_enderecos <- geocodebr::geocode_reverso(  pontos = pontos,  dist_max = 1000,  verboso = FALSE,  n_cores = 1  )"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"id_3-busca-por-ceps","dir":"","previous_headings":"Utilização","what":"3. Busca por CEPs","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"Por fim, função busca_por_cep() permite fazer consultas de CEPs para encontrar endereços associados cada CEP e suas coordenadas espaciais.","code":"# amostra de CEPs ceps <- c(\"70390-025\", \"20071-001\")  df_ceps <- geocodebr::busca_por_cep(  cep = ceps,  resultado_sf = FALSE,  verboso = FALSE  )"},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"nota-","dir":"","previous_headings":"","what":"Nota","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"Os dados originais CNEFE são coletados pelo Instituto Brasileiro de Geografia e Estatística (IBGE). O {geocodebr} foi desenvolvido por uma equipe Instituto de Pesquisa Econômica Aplicada (Ipea)","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"instituições-utilizando-o-geocodebr","dir":"","previous_headings":"","what":"Instituições utilizando o {geocodebr}","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"Além de diversos pesquisadores e empresas que utilizam o {geocodebr}, o pacote também tem sido utilizado oficialmente por algumas instituições públicas planejamento e avaliação de políticas públicas. Entre elas: Banco Central Brasil Ministério Desenvolvimento Social e Combate à Fome (MDS)","code":""},{"path":"https://ipeagit.github.io/geocodebr/index.html","id":"projetos-relacionados","dir":"","previous_headings":"","what":"Projetos relacionados","title":"Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses)","text":"Existem diversos pacotes de geolocalização disponíveis, muitos dos quais podem ser utilizados em R (listados abaixo). maioria dessas alternativas depende de softwares e conjuntos de dados comerciais, geralmente impondo limites de número de consultas gratuitas. Em contraste, principais vantagens {geocodebr} são que o pacote: () é completamente gratuito, permitindo consultas ilimitadas sem nenhum custo; (b) opera com alta velocidade e escalabilidade eficiente, permitindo geocodificar milhões de endereços em apenas alguns minutos, sem necessidade de infraestrutura computacional avançada ou de alto desempenho. {arcgisgeocode} {arcgeocoder}: utiliza serviço de geocode ArcGIS {nominatimlite}: baseado dados OSM {photon}: baseado dados OSM {tidygeocoder}: API para diversos servicos de geolocalização {googleway} {mapsapi}: interface para API Google Maps","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a column with info of geocode match_type — add_precision_col","title":"Add a column with info of geocode match_type — add_precision_col","text":"Add column info geocode match_type","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a column with info of geocode match_type — add_precision_col","text":"","code":"add_precision_col(con, update_tb = NULL)"},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a column with info of geocode match_type — add_precision_col","text":"con db connection update_tb String. Name table updated con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/add_precision_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a column with info of geocode match_type — add_precision_col","text":"Adds new column table con","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely use arrow to open a Parquet file — arrow_open_dataset","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"function handles failure modes, including Parquet file corrupted.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"","code":"arrow_open_dataset(filename)"},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"filename local Parquet file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/arrow_open_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely use arrow to open a Parquet file — arrow_open_dataset","text":"arrow::Dataset","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/busca_por_cep.html","id":null,"dir":"Reference","previous_headings":"","what":"Busca por CEP — busca_por_cep","title":"Busca por CEP — busca_por_cep","text":"Busca endereços e suas coordenadas geográficas partir de um CEP. coordenadas de output utilizam o sistema de coordenadas geográficas SIRGAS 2000, EPSG 4674.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/busca_por_cep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Busca por CEP — busca_por_cep","text":"","code":"busca_por_cep(cep, resultado_sf = FALSE, verboso = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/busca_por_cep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Busca por CEP — busca_por_cep","text":"cep Vetor. Um CEP ou um vetor de CEPs com 8 dígitos. resultado_sf Lógico. Indica se o resultado deve ser um objeto espacial da classe sf. Por padrão, é FALSE, e o resultado é um data.frame. verboso Um valor lógico. Indica se barras de progresso e mensagens devem ser exibidas durante o download dos dados CNEFE e geocodificação dos endereços. O padrão é TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/busca_por_cep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Busca por CEP — busca_por_cep","text":"Retorna um data.frame com os CEPs de input e os endereços presentes naquele CEP com suas coordenadas geográficas de latitude (lat) e longitude (lon). Alternativamente, o resultado pode ser um objeto sf.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/busca_por_cep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Busca por CEP — busca_por_cep","text":"","code":"library(geocodebr)  # amostra de CEPs ceps <- c(\"70390-025\", \"20071-001\", \"99999-999\")  df <- geocodebr::busca_por_cep(   cep = ceps,   verboso = FALSE   )  df #>          cep estado      municipio                logradouro localidade #>       <char> <char>         <char>                    <char>     <char> #> 1: 70390-025     DF       BRASILIA  EDF SEPS 702 902 BLOCO A    ASA SUL #> 2: 70390-025     DF       BRASILIA  EDF SEPS 702 902 BLOCO B    ASA SUL #> 3: 70390-025     DF       BRASILIA  EDF SEPS 702 902 BLOCO C    ASA SUL #> 4: 20071-001     RJ RIO DE JANEIRO AVENIDA PRESIDENTE VARGAS     CENTRO #> 5: 99999-999   <NA>           <NA>                      <NA>       <NA> #>          lat       lon #>        <num>     <num> #> 1: -15.79815 -47.89608 #> 2: -15.79742 -47.89439 #> 3: -15.79922 -47.89707 #> 4: -22.90235 -43.18279 #> 5:        NA        NA"},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when caching file — cache_message","title":"Message when caching file — cache_message","text":"Message caching file","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when caching file — cache_message","text":"","code":"cache_message(   local_file = parent.frame()$local_file,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when caching file — cache_message","text":"local_file address file passed download_file function. cache Logical. Whether cached data used.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/cache_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when caching file — cache_message","text":"message","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":null,"dir":"Reference","previous_headings":"","what":"create index — create_index","title":"create index — create_index","text":"create index","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/create_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create index — create_index","text":"","code":"create_index(con, tb, cols, operation, overwrite = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":null,"dir":"Reference","previous_headings":"","what":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"Cria um vetor de caracteres especificando colunas que representam cada campo endereço na tabela de endereços. Os campos estado e municipio são obrigatórios.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"","code":"definir_campos(   estado,   municipio,   logradouro = NULL,   numero = NULL,   cep = NULL,   localidade = NULL )"},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"estado Uma string. O nome da coluna que representa o estado endereço. Campo obrigatório. Na tabela de endereços, essa coluna pode conter os nomes dos estados por extenso, ou abrevição oficial dos estados com duas letras, e.g. \"\", \"SP\", \"DF\", \"RJ\". municipio Uma string. O nome da coluna que representa o município endereço. Campo obrigatório. Na tabela de endereços, essa coluna pode conter o nome dos municípios, ou o seu código IBGE de 7 dígitos. logradouro Uma string. O nome da coluna que representa o logradouro (endereço da rua) endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. Na tabela de endereços, essa coluna deve incluir o tipo lograoduro, indicando se trata-se de uma \"Rua\" ou \"Avenida\" etc, por exemplo \"Avenida Presidente Getúlio Vargas\". Além disso, essa coluna não deve incluir o numero endereço, pois o número deve ser indicado numa coluna separada. numero Uma string. O nome da coluna que representa o número endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. Na tabela de endereços, valores como 0 ou caracteres não numerciso como \"S/N\" ou \"10a\" são considerados como NA. cep Uma string. O nome da coluna que representa o CEP (Código de Endereçamento Postal) endereço. Pode ser NULL se o campo não estiver especificado na tabela de endereços. localidade Uma string. O nome da coluna que representa localidade (equivalente ao 'bairro' em áreas urbanas) endereço. Pode ser NULL se esse campo não estiver presente na tabela de endereços.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"Um vetor de caracteres qual os nomes são os campos endereço e os valores são colunas que os representam na tabela de endereços.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_campos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Especifica as colunas que descrevem os campos dos endereços — definir_campos","text":"","code":"definir_campos(   logradouro = \"Nome_logradouro\",   numero = \"Numero\",   cep = \"CEP\",   localidade = \"Bairro\",   municipio = \"Cidade\",   estado = \"UF\" ) #>        logradouro            numero               cep        localidade  #> \"Nome_logradouro\"          \"Numero\"             \"CEP\"          \"Bairro\"  #>         municipio            estado  #>          \"Cidade\"              \"UF\""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Define um diretório de cache para o geocodebr — definir_pasta_cache","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"Define um diretório de cache para os dados geocodebr. Essa configuração é persistente entre sessões R.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"","code":"definir_pasta_cache(path)"},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"path Uma string. O caminho para o diretório usado para armazenar os dados em cache.  Se NULL, o pacote usará um diretório versionado salvo dentro diretório retornado por tools::R_user_dir().","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"Retorna de forma invisível o caminho diretório de cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/definir_pasta_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define um diretório de cache para o geocodebr — definir_pasta_cache","text":"","code":"definir_pasta_cache(tempdir()) #> ℹ Definido como pasta de cache /tmp/RtmpFGdGKr.  # retoma pasta padrão do pacote definir_pasta_cache( path = NULL) #> ℹ Definido como pasta de cache #>   /home/runner/.cache/R/geocodebr/data_release_v0.2.0."},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"Deleta todos arquivos da pasta cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"","code":"deletar_pasta_cache()"},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"Retorna de forma invisível o caminho diretório de cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/deletar_pasta_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletar pasta de cache do geocodebr — deletar_pasta_cache","text":"","code":"if (FALSE) { # identical(TRUE, FALSE) deletar_pasta_cache() }"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":null,"dir":"Reference","previous_headings":"","what":"Faz download dos dados do CNEFE — download_cnefe","title":"Faz download dos dados do CNEFE — download_cnefe","text":"Faz o download de uma versão pre-processada e enriquecida CNEFE (Cadastro Nacional de Endereços para Fins Estatísticos) que foi criada para o uso deste pacote.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faz download dos dados do CNEFE — download_cnefe","text":"","code":"download_cnefe(tabela = \"todas\", verboso = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faz download dos dados do CNEFE — download_cnefe","text":"tabela Nome da tabela para ser baixada. Por padrão, baixa \"todas\". verboso Um valor lógico. Indica se barras de progresso e mensagens devem ser exibidas durante o download dos dados CNEFE e geocodificação dos endereços. O padrão é TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Faz download dos dados do CNEFE — download_cnefe","text":"Retorna o caminho para o diretório onde os dados foram salvos.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/download_cnefe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faz download dos dados do CNEFE — download_cnefe","text":"","code":"download_cnefe(verboso = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Geolocaliza endereços no Brasil — geocode","title":"Geolocaliza endereços no Brasil — geocode","text":"Geocodifica endereços brasileiros com base nos dados CNEFE. Os endereços de input devem ser passados como um data.frame, qual cada coluna descreve um campo endereço (logradouro, número, cep, etc). O resuldos dos endereços geolocalizados podem seguir diferentes níveis de precisão. Consulte abaixo seção \"Detalhes\" para mais informações. coordenadas de output utilizam o sistema de coordenadas geográficas SIRGAS 2000, EPSG 4674.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geolocaliza endereços no Brasil — geocode","text":"","code":"geocode(   enderecos,   campos_endereco = definir_campos(),   resultado_completo = FALSE,   resolver_empates = FALSE,   resultado_sf = FALSE,   verboso = TRUE,   cache = TRUE,   n_cores = 1 )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geolocaliza endereços no Brasil — geocode","text":"enderecos Um data.frame. Os endereços serem geolocalizados. Cada coluna deve representar um campo endereço. campos_endereco Um vetor de caracteres. correspondência entre cada campo de endereço e o nome da coluna que o descreve na tabela enderecos. função definir_campos() auxilia na criação deste vetor e realiza algumas verificações nos dados de entrada. Campos de endereço passados como NULL serão ignorados, e função deve receber pelo menos um campo não nulo, além  dos campos \"estado\" e \"municipio\", que são obrigatórios. Note que o campo  \"localidade\" é equivalente 'bairro'. resultado_completo Lógico. Indica se o output deve incluir colunas adicionais, como o endereço encontrado de referência. Por padrão, é FALSE. resolver_empates Lógico. Alguns resultados da geolocalização podem indicar diferentes coordenadas possíveis (e.g. duas ruas diferentes com o mesmo nome em uma mesma cidade). Esses casos são trados como 'empate' e o parâmetro resolver_empates indica se função deve resolver esses empates automaticamente. Por padrão, é FALSE, e função retorna apenas o caso mais provável. Para mais detalhes sobre como é feito o processo de desempate, consulte abaixo seção \"Detalhes\". resultado_sf Lógico. Indica se o resultado deve ser um objeto espacial da classe sf. Por padrão, é FALSE, e o resultado é um data.frame com colunas lat e lon. verboso Um valor lógico. Indica se barras de progresso e mensagens devem ser exibidas durante o download dos dados CNEFE e geocodificação dos endereços. O padrão é TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário. n_cores Um número. O número de núcleos de CPU serem utilizados processamento dos dados. O padrão é 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geolocaliza endereços no Brasil — geocode","text":"Retorna o data.frame de input enderecos adicionado das colunas de latitude (lat) e longitude (lon), bem como colunas (precisao e tipo_resultado) que indicam o nível de precisão e o tipo de resultado. Alternativamente, o resultado pode ser um objeto sf.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geolocaliza endereços no Brasil — geocode","text":"Precisão dos resultados: Os resultados geocodebr são classificados em seis amplas categorias de precisao: \"numero\" \"numero_aproximado\" \"logradouro\" \"cep\" \"localidade\" \"municipio\" Cada nível de precisão pode ser desagregado em tipos de correspondência mais refinados. Lidando com casos de empate: processo de geolocalização de dados, é possível que para alguns endereços de input sejam encontrados diferentes coordenadas possíveis (e.g. duas ruas diferentes com o mesmo nome, mas em bairros distintos em uma mesma cidade). Esses casos são trados como empate'. Quando função geocode() recebe o o parâmetro resolver_empates = TRUE, os casos de empate são resolvidos automaticamente pela função. solução destes empates é feita da seguinte maneira: Quando se encontra diferente coordenadas possíveis para um endereço de input, nós assumimos que essas coordendas pertencem provavelmente endereços diferentes se () estas coordenadas estão mais de 1Km entre si, ou (b) estão associadas um logradouro 'ambíguo', .e. que costumam se repetir em muitos bairros (e.g. \"RUA \", \"RUA QUATRO\", \"RUA 10\", etc). Nestes casos, solução de desempate é retornar o ponto com maior número de estabelecimentos CNEFE, valor indicado na coluna \"contagem_cnefe\". Quando coordenadas possivelmente associadas um endereço estão menos de 1Km entre si e não se trata de um logradouro 'ambíguo', nós assumimos que os pontos pertencem provavelmente ao mesmo logradouro (e.g. diferentes CEPs ao longo de uma mesma rua). Nestes casos, solução de desempate é retornar um ponto que resulta da média das coordenadas dos pontos possíveis ponderada pelo valor de \"contagem_cnefe\". Nesse caso, coluna de output \"endereco_encontrado\" recebe valor ponto com maior \"contagem_cnefe\".","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"tipos-de-resultados","dir":"Reference","previous_headings":"","what":"Tipos de resultados","title":"Geolocaliza endereços no Brasil — geocode","text":"coluna tipo_resultado fornece informações mais detalhadas sobre como exatamente cada endereço de entrada foi encontrado CNEFE. Em cada categoria,  o geocodebr calcula média da latitude e longitude dos endereços incluídos CNEFE que correspondem ao endereço de entrada, com base em combinações de diferentes campos. caso mais rigoroso, por exemplo, função encontra uma correspondência determinística para todos os campos de um dado endereço (\"estado\", \"municipio\", \"logradouro\", \"numero\", \"cep\", \"localidade\"). Pense, por exemplo, em um prédio com vários apartamentos que correspondem ao mesmo endereço de rua e número. Nesse caso, coordenadas dos apartamentos podem diferir ligeiramente, e o geocodebr calcula média dessas coordenadas. Em um caso menos rigoroso, qual apenas os campos (\"estado\", \"municipio\", \"logradouro\", \"localidade\") são encontrados, o geocodebr calcula coordenadas médias de todos os endereços CNEFE ao longo daquela rua e que se encontram na mesma localidade/bairro. Assim, coordenadas de resultado tendem ser o ponto médio trecho daquela rua que passa dentro daquela localidade/bairro. coluna tipo_resultado fornece informações mais detalhadas sobre os campos de endereço utilizados cálculo das coordenadas de cada endereço de entrada. Cada categoria é nomeada partir de um código de quatro caracteres: o primeiro caracter, sempre d ou p, determina se correspondência foi feita de forma determinística (d) ou probabilística (p); o segundo faz menção à categoria de precisao na qual o resultado foi classificado (n para \"numero\", para \"numero_aproximado\", r para \"logradouro\", c para \"cep\", b para \"localidade\" e m para \"municipio\"); o terceiro e o quarto caracteres designam classificação de cada categoria dentro de seu grupo - via de regra, quanto menor o número formado por esses caracteres, mais precisa são coordenadas calculadas. categorias de tipo_resultado são listadas abaixo, junto às categorias de precisao qual elas estão associadas: precisao \"numero\" dn01 - logradouro, numero, cep e localidade dn02 - logradouro, numero e cep dn03 - logradouro, numero e localidade dn04 - logradouro e numero pn01 - logradouro, numero, cep e localidade pn02 - logradouro, numero e cep pn03 - logradouro, numero e localidade pn04 - logradouro e numero precisao \"numero_aproximado\" da01 - logradouro, numero, cep e localidade da02 - logradouro, numero e cep da03 - logradouro, numero e localidade da04 - logradouro e numero pa01 - logradouro, numero, cep e localidade pa02 - logradouro, numero e cep pa03 - logradouro, numero e localidade pa04 - logradouro e numero precisao \"logradouro\" (quando o número de entrada está faltando 'S/N') dl01 - logradouro, cep e localidade dl02 - logradouro e cep dl03 - logradouro e localidade dl04 - logradouro pl01 - logradouro, cep e localidade pl02 - logradouro e cep pl03 - logradouro e localidade pl04 - logradouro precisao \"cep\" dc01 - municipio, cep, localidade dc02 - municipio, cep precisao \"localidade\" db01 - municipio, localidade precisao \"municipio\" dm01 - municipio Endereços não encontrados são retornados com latitude, longitude, precisão e tipo de resultado NA.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"busca-probabilitisca","dir":"Reference","previous_headings":"","what":"Busca probabilitisca","title":"Geolocaliza endereços no Brasil — geocode","text":"Os tipos de resultado com busca probabilitisca usam como base o algoritmo de semelhança de Jaro para comparar strings de 'logradouro' dos dados de input e da base de endereços geocodebr. O pacote considera como match o logradouro da base de endereços que apresenta maior semelhança de Jaro condicionado uma semelhança mínima de 0.85, e desde que também haja match determinístico em ao menos um dos campos \"cep\" e \"localidade\".","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geolocaliza endereços no Brasil — geocode","text":"","code":"library(geocodebr)  # ler amostra de dados data_path <- system.file(\"extdata/small_sample.csv\", package = \"geocodebr\") input_df <- read.csv(data_path)  fields <- geocodebr::definir_campos(   logradouro = \"nm_logradouro\",   numero = \"Numero\",   cep = \"Cep\",   localidade = \"Bairro\",   municipio = \"nm_municipio\",   estado = \"nm_uf\" )  df <- geocodebr::geocode(   enderecos = input_df,   campos_endereco = fields,   resolver_empates = TRUE,   verboso = FALSE   ) #> Warning: no non-missing arguments to max; returning -Inf  head(df) #>       id            nm_logradouro Numero       Cep               Bairro #>    <int>                   <char>  <int>    <char>               <char> #> 1:     1 Rua Maria Lucia Pacifico     17 26042-730           Santa Rita #> 2:     2      Rua Leopoldina Tome     46 25030-050           Centenario #> 3:     3          Rua Dona Judite      0 23915-700          Caputera II #> 4:     4     Rua Alexandre Amaral      0 23098-120           Santissimo #> 5:     5                Avenida E    300 23860-000         Praia Grande #> 6:     6      Rua Princesa Isabel    263           Estacao Experimental #>       nm_municipio code_muni  nm_uf        lat       lon tipo_resultado #>             <char>     <int> <char>      <num>     <num>         <char> #> 1:     Nova Iguacu   3303500     RJ -22.695496 -43.47118           dn01 #> 2: Duque de Caxias   3301702     RJ -22.779173 -43.31134           dn01 #> 3:  Angra dos Reis   3300100     RJ -22.978837 -44.20848           dl01 #> 4:  Rio de Janeiro   3304557     RJ -22.868992 -43.51150           dl01 #> 5:     Mangaratiba   3302601     RJ -22.929864 -43.97214           dn01 #> 6:      Rio Branco   1200401     AC  -9.963436 -67.83559           dn03 #>      precisao #>        <char> #> 1:     numero #> 2:     numero #> 3: logradouro #> 4: logradouro #> 5:     numero #> 6:     numero #>                                                            endereco_encontrado #>                                                                         <char> #> 1:      RUA MARIA LUCIA PACIFICO, 17 - SANTA RITA, NOVA IGUACU - RJ, 26042-730 #> 2:       RUA LEOPOLDINA TOME, 46 - CENTENARIO, DUQUE DE CAXIAS - RJ, 25030-050 #> 3:               RUA DONA JUDITE - CAPUTERA II, ANGRA DOS REIS - RJ, 23915-700 #> 4:           RUA ALEXANDRE AMARAL - SANTISSIMO, RIO DE JANEIRO - RJ, 23098-120 #> 5:                  AVENIDA E, 300 - PRAIA GRANDE, MANGARATIBA - RJ, 23860-000 #> 6: RUA PRINCESA ISABEL, 263 - ESTACAO EXPERIMENTAL, RIO BRANCO - AC, 69921-026 #>    empate #>    <lgcl> #> 1:  FALSE #> 2:  FALSE #> 3:  FALSE #> 4:  FALSE #> 5:  FALSE #> 6:  FALSE"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_reverso.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode reverso de coordenadas espaciais no Brasil — geocode_reverso","title":"Geocode reverso de coordenadas espaciais no Brasil — geocode_reverso","text":"Geocode reverso de coordenadas geográficas para endereços. função recebe um sf data frame com pontos e retorna o endereço mais próximo dando uma distância máxima de busca.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_reverso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode reverso de coordenadas espaciais no Brasil — geocode_reverso","text":"","code":"geocode_reverso(   pontos,   dist_max = 1000,   verboso = TRUE,   cache = TRUE,   n_cores = 1 )"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_reverso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode reverso de coordenadas espaciais no Brasil — geocode_reverso","text":"pontos Uma tabela de dados com classe espacial sf data frame sistema de coordenadas geográficas SIRGAS 2000, EPSG 4674. dist_max Integer. Distancia máxima aceitável (em metros) entre os pontos de input e o endereço Por padrão, distância é de 1000 metros. verboso Um valor lógico. Indica se barras de progresso e mensagens devem ser exibidas durante o download dos dados CNEFE e geocodificação dos endereços. O padrão é TRUE. cache Um valor lógico. Indica se os dados CNEFE devem ser salvos ou lidos cache, reduzindo o tempo de processamento em chamadas futuras. O padrão é TRUE. Quando FALSE, os dados CNEFE são baixados para um diretório temporário. n_cores Um número. O número de núcleos de CPU serem utilizados processamento dos dados. O padrão é 1.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_reverso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode reverso de coordenadas espaciais no Brasil — geocode_reverso","text":"Retorna o sf data.frame de input adicionado das colunas endereço encontrado. O output inclui uma coluna \"distancia_metros\" que indica distância entre o ponto de input e o endereço mais próximo encontrado.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/geocode_reverso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocode reverso de coordenadas espaciais no Brasil — geocode_reverso","text":"","code":"library(geocodebr) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  # ler amostra de dados pontos <- readRDS(     system.file(\"extdata/pontos.rds\", package = \"geocodebr\")     )  pontos <- pontos[1:50,]  # geocode reverso df_enderecos <- geocodebr::geocode_reverso(   pontos = pontos,   dist_max = 1000,   verboso = TRUE,   n_cores = 1   ) #> ℹ Utilizando dados do CNEFE armazenados localmente"},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":null,"dir":"Reference","previous_headings":"","what":"Package: geocodebr: Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses) — geocodebr","title":"Package: geocodebr: Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses) — geocodebr","text":"Método simples e eficiente de geolocalizar dados Brasil. O pacote é baseado em conjuntos de dados espaciais abertos de endereços brasileiros, utilizando como fonte principal o Cadastro Nacional de Endereços para Fins Estatísticos (CNEFE). O CNEFE é publicado pelo Instituto Brasileiro de Geografia e Estatística (IBGE), órgão oficial de estatísticas e geografia Brasil. (simple efficient method geolocating data Brazil. package based open spatial datasets Brazilian addresses, primarily using Cadastro Nacional de Endereços para Fins Estatísticos (CNEFE), published Instituto Brasileiro de Geografia e Estatística (IBGE), Brazil's official statistics geography agency.)","code":""},{"path":[]},{"path":"https://ipeagit.github.io/geocodebr/reference/geocodebr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package: geocodebr: Geolocalização De Endereços Brasileiros (Geocoding Brazilian Addresses) — geocodebr","text":"Maintainer: Rafael H. M. Pereira rafa.pereira.br@gmail.com (ORCID) Authors: Daniel Herszenhut dhersz@gmail.com (ORCID) contributors: Arthur Bazolli baz.arthur@gmail.com [contributor] Ipea - Instituto de Pesquisa Econômica Aplicada [copyright holder, funder]","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Listar dados em cache — listar_dados_cache","title":"Listar dados em cache — listar_dados_cache","text":"Lista os dados salvos localmente na pasta de cache","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Listar dados em cache — listar_dados_cache","text":"","code":"listar_dados_cache(print_tree = FALSE)"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Listar dados em cache — listar_dados_cache","text":"print_tree Um valor lógico. Indica se o conteúdo da pasta de cache deve ser exibido em um formato de árvore. O padrão é FALSE.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Listar dados em cache — listar_dados_cache","text":"O caminho para os arquivos em cache","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_dados_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Listar dados em cache — listar_dados_cache","text":"","code":"listar_dados_cache() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio.parquet\"                                  #> [2] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_cep.parquet\"                              #> [3] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_cep_localidade.parquet\"                   #> [4] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_localidade.parquet\"                       #> [5] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_cep_localidade.parquet\"        #> [6] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_localidade.parquet\"            #> [7] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_numero_cep_localidade.parquet\" #> [8] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0/municipio_logradouro_numero_localidade.parquet\"      listar_dados_cache(print_tree = TRUE) #> /home/runner/.cache/R/geocodebr/data_release_v0.2.0 #> ├── municipio.parquet #> ├── municipio_cep.parquet #> ├── municipio_cep_localidade.parquet #> ├── municipio_localidade.parquet #> ├── municipio_logradouro_cep_localidade.parquet #> ├── municipio_logradouro_localidade.parquet #> ├── municipio_logradouro_numero_cep_localidade.parquet #> └── municipio_logradouro_numero_localidade.parquet"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"Obtém o caminho da pasta utilizada para armazenar em cache os dados geocodebr. Útil para inspecionar pasta configurada com definir_pasta_cache() em uma sessão anterior R. Retorna pasta de cache padrão caso nenhuma pasta personalizado tenha sido configurada anteriormente.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"","code":"listar_pasta_cache()"},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"O caminho da pasta de cache.","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/listar_pasta_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtém a pasta de cache usado no geocodebr — listar_pasta_cache","text":"","code":"listar_pasta_cache() #> [1] \"/home/runner/.cache/R/geocodebr/data_release_v0.2.0\""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update input_padrao_db to remove observations previously matched — update_input_db","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Update input_padrao_db remove observations previously matched","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"","code":"update_input_db(con, update_tb = \"input_padrao_db\", reference_tb)"},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"con db connection update_tb String. Name table updated con reference_tb table written con used reference","code":""},{"path":"https://ipeagit.github.io/geocodebr/reference/update_input_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update input_padrao_db to remove observations previously matched — update_input_db","text":"Drops observations input_padrao_db","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"geocodebr-021","dir":"Changelog","previous_headings":"","what":"geocodebr 0.2.1","title":"geocodebr 0.2.1","text":"CRAN release: 2025-07-07","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"correção-de-bugs-bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Correção de bugs (Bug fixes)","title":"geocodebr 0.2.1","text":"Resolvido bug que retornava erro se o input usuario comecava o geocode direto partir match case \"pl01\".","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"geocodebr-020","dir":"Changelog","previous_headings":"","what":"geocodebr 0.2.0","title":"geocodebr 0.2.0","text":"CRAN release: 2025-05-07","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"mudanças-grandes-major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Mudanças grandes (Major changes)","title":"geocodebr 0.2.0","text":"função geocode() agora inclui busca com match probabilistico. Encerra issue #34. Nova função buscapor_cep(). Encerra issue #8. Nova função geocode_reverso(). Encerra issue #35. função download_cnefe() agora aceita o argumento tabela para baixar tabelas específicas.","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"mudanças-pequenas-minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Mudanças pequenas (Minor changes)","title":"geocodebr 0.2.0","text":"Ajuste na solução de casos de empate mais refinada e agora detalhada na documentação da função geocode(). Encerra issue #37. O método adotado na solução de empates agora fica transparente na documentação da função geocode(). Nova vignette sobre função geocode_reverso() Vignette sobre Get Started e da função geocode() reorganizadas","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"correção-de-bugs-bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Correção de bugs (Bug fixes)","title":"geocodebr 0.2.0","text":"Resolvido bug que decaracterizava colunas de classe integer64 na tabela de input de endereços. Encerra issue #40.","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"novos-contribuidores-new-contributions-0-2-0","dir":"Changelog","previous_headings":"","what":"Novos contribuidores (New contributions)","title":"geocodebr 0.2.0","text":"Arthur Bazzolli","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"geocodebr-011","dir":"Changelog","previous_headings":"","what":"geocodebr 0.1.1","title":"geocodebr 0.1.1","text":"CRAN release: 2025-02-17","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"correção-de-bugs-0-1-1","dir":"Changelog","previous_headings":"","what":"Correção de bugs","title":"geocodebr 0.1.1","text":"Corrigido bug na organização de pastas cache de dados. Fecha o issue 29.","code":""},{"path":"https://ipeagit.github.io/geocodebr/news/index.html","id":"geocodebr-010","dir":"Changelog","previous_headings":"","what":"geocodebr 0.1.0","title":"geocodebr 0.1.0","text":"CRAN release: 2025-02-12 Primeira versão estável.","code":""}]
